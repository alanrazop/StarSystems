              <div class="tile is-parent is-vertical">
                <article class="tile is-child">
                  <table id ="user_table" class="table is-bordered is-striped is-narrow is-hoverable" oninput="renderChart()">
                    <tbody>
                      <tr>
                        <th>Coeficiente</th>
                        <td><input id="coeficiente" class="input" value=<%=coeficiente_efectividad.toFixed(2)%> type="text" name="coeficiente" placeholder=".85"></td>
                      </tr>
                      <tr>
                        <th>Vacaciones TM</th>
                        <td><input id="v_tm" class="input" type="text" name="vacaciones_tm" placeholder="12"></td>
                      </tr>
                      <tr>
                        <th>Vacaciones TC</th>
                        <td><input id="v_tc" class="input" value=<%=horas_vacaciones%> type="text" name="vacaciones_tc" placeholder="5"></td>
                      </tr>
                      <tr>
                        <th>NGblock TM</th>
                        <td><input id="ng_tm" class="input" value="0" type="text" name="ngblock_tm" placeholder="8"></td>
                      </tr>
                      <tr>
                        <th>NGblock TC</th>
                        <td><input id="ng_tc" class="input" value="0" type="text" name="ngblock_tc" placeholder="5"></td>
                      </tr>
                    </tbody>
                  </table>
                </article>
                <article class="tile is-child">
                  <table class="table is-bordered is-striped is-narrow">
                    <tbody>
                      <tr>
                        <th>Horas capacidad</th>
                        <td><input class="input" name="horas_capacidad" type="text" readonly></td>
                      </tr>
                      <tr>
                        <th>Horas ajustadas</th>
                        <td><input class="input" name="horas_ajustadas" value=<%=horas_trabajadas%> type="text" readonly></td>
                      </tr>
                      <tr>
                        <th>Efectividad</th>
                        <td><input class="input" name="efectividad" type="text" readonly></td>
                      </tr>
                      <tr>
                        <th>Capacidad ajustada</th>
                        <td><input class="input" name="capacidad_ajustada" type="text" readonly></td>
                      </tr>
                    </tbody>
                  </table>
                </article>
                <article class="tile is-child">
                  <canvas id="myChart" width="400" height="400"></canvas>
                </article>
              </div>

              <script>
                async function getVars(){
                    let variables_ajuste = {
                      coef:  parseFloat(document.getElementById("coeficiente").value), 
                      ng_tm: parseInt(document.getElementById("ng_tm").value),
                      ng_tc: parseInt(document.getElementById("ng_tc").value), 
                      v_tm:  parseInt(document.getElementById("v_tm").value), 
                      v_tc:  parseInt(document.getElementById("v_tc").value), 
                    }
                    console.log(variables_ajuste);
                   return variables_ajuste;
                  }

                  console.log('variables cargadas')
                  
async function createChart(variables_ajuste) {  
              const ctx = document.getElementById('myChart').getContext('2d');
              const myChart = new Chart(ctx, {
                  type: 'bar',
                  data: {
                      labels: ['Coeficiente', 'NG_tc', 'NG_tm', 'V_TC', 'V_TM'],
                      datasets: [{
                          label: 'indicadores',
                          data: [variables_ajuste.coef, 
                                variables_ajuste.ng_tc, 
                                variables_ajuste.ng_tm, 
                                variables_ajuste.v_tc, 
                                variables_ajuste.v_tm],

                          backgroundColor: [
                              'rgba(255, 99, 132, 0.2)',
                              'rgba(54, 162, 235, 0.2)',
                              'rgba(255, 206, 86, 0.2)',
                              'rgba(75, 192, 192, 0.2)',
                              'rgba(255, 159, 64, 0.2)'
                          ],
                          borderColor: [
                              'rgba(255, 99, 132, 1)',
                              'rgba(54, 162, 235, 1)',
                              'rgba(255, 206, 86, 1)',
                              'rgba(75, 192, 192, 1)',
                              'rgba(255, 159, 64, 1)'
                          ],
                          borderWidth: 1
                      }]
                  },
                  options: {
                      scales: {
                          y: {
                              beginAtZero: true
                          }
                      }
                  }
              });
                  }
                  
              async function renderChart() {
                await getVars().then((vars) => {
                  console.log(vars);
                  createChart(vars); 
                })
                .catch(err => {console.log(err)} )
              }
              </script>
              